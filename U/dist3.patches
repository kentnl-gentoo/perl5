These are patches I have applied on top of the dist3.060 distribution.
Eventually, I'll fold them back into the main dist sources.

	Andy Dougherty		<doughera@lafcol.lafayette.edu>

Index: Loc.U
Prereq:  3.0.1.9 
*** mcon/U//Loc.U	Fri Nov 10 10:51:05 1995
--- /home2/doughera/lib/dist/U//Loc.U	Sun Nov 26 15:43:18 1995
***************
*** 96,105 ****
  	fi
  	;;
  	*)
! ?X: Be careful in case thing includes wildcards that might expand to multiple
! ?X: files.  Choose the last one.  This happens when searching for shared
! ?X: libraries with version numbers.  How to choose which one we want is
! ?X: probably an insoluble problem, in general.
  	for thisthing in \$dir/\$thing; do
  		: just loop through to pick last item
  	done
--- 96,109 ----
  	fi
  	;;
  	*)
! ?X:	Be careful in case thing includes wildcards that might expand to multiple
! ?X:	files.  Choose the last one.  This happens when searching for shared
! ?X:	libraries with version numbers.  How to choose which one we want is
! ?X:	probably an insoluble problem, in general.
! ?X:	Some folks leave things like libc.so.orig around w/o read
! ?X:	permission.  A -r test would handle that, but since ./loc is
! ?X:	also used to find executables (which are installed w/o read
! ?X:	permission on SCO ODT 3.0, we can't include the -r test.
  	for thisthing in \$dir/\$thing; do
  		: just loop through to pick last item
  	done
***************
*** 210,217 ****
  		echo $file is in $xxx.
  		;;
  	*)
! 		echo "I don't know where '$file' is, and my life depends on it."
! 		echo "Go find a public domain implementation or fix your PATH setting!"
  		exit 1
  		;;
  	esac
--- 214,221 ----
  		echo $file is in $xxx.
  		;;
  	*)
! 		echo "I don't know where '$file' is, and my life depends on it." >&4
! 		echo "Go find a public domain implementation or fix your PATH setting!" >&4
  		exit 1
  		;;
  	esac
Index: Oldconfig.U
Prereq:  3.0.1.9 
*** mcon/U//Oldconfig.U	Tue Jul 25 15:04:18 1995
--- /home2/doughera/lib/dist/U//Oldconfig.U	Tue Nov 14 17:16:07 1995
***************
*** 161,169 ****
  	$test -d /usr/apollo/bin && osname=apollo
  	$test -f /etc/saf/_sactab && osname=svr4
  	$test -d /usr/include/minix && osname=minix
! 	$test -d /MachTen && osname=machten && \
! 		osvers=`/usr/etc/version | $awk '{print $2}' | \
! 		$sed -e 's/[A-Za-z]$//'`
  ?X: If we have uname, we already computed a suitable uname -a output, correctly
  ?X: formatted for Xenix, and it lies in $myuname.
  	if $test -f $uname; then
--- 161,183 ----
  	$test -d /usr/apollo/bin && osname=apollo
  	$test -f /etc/saf/_sactab && osname=svr4
  	$test -d /usr/include/minix && osname=minix
! 	if $test -d /MachTen; then
! ?X:		MachTen uname -a output looks like
! ?X:		xxx 4 0.0 Macintosh
! ?X:		MachTen /sbin/version output looks like
! ?X:		MachTen 4.0 Mon Aug 28 10:18:00 1995
! ?X:		MachTen 3.x had the 'version' command in /usr/etc/version.
! 		osname=machten 
! 		if $test -x /sbin/version; then
! 			osvers=`/sbin/version | $awk '{print $2}' | 
! 			$sed -e 's/[A-Za-z]$//'`
! 		elif $test -x /usr/etc/version; then
! 			osvers=`/usr/etc/version | $awk '{print $2}' | 
! 			$sed -e 's/[A-Za-z]$//'`
! 		else
! 			osvers="$2.$3"
! 		fi
! 	fi
  ?X: If we have uname, we already computed a suitable uname -a output, correctly
  ?X: formatted for Xenix, and it lies in $myuname.
  	if $test -f $uname; then
Index: archlib.U
Prereq:  3.0.1.4 
*** mcon/U//archlib.U	Fri Nov 10 10:51:06 1995
--- /home2/doughera/lib/dist/U//archlib.U	Sat Nov 11 16:56:14 1995
***************
*** 89,95 ****
  them with the rest of the public library files.
  
  EOM
! fn=d~
  rp='Where do you want to put the public architecture-dependent libraries?'
  . ./getfile
  archlib="$ans"
--- 89,95 ----
  them with the rest of the public library files.
  
  EOM
! fn=d+~
  rp='Where do you want to put the public architecture-dependent libraries?'
  . ./getfile
  archlib="$ans"
Index: myhostname.U
Prereq:  3.0.1.2 
*** mcon/U//myhostname.U	Sat Oct 29 15:28:04 1994
--- /home2/doughera/lib/dist/U//myhostname.U	Sun Nov 26 16:09:08 1995
***************
*** 20,26 ****
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
  ?MAKE:myhostname phostname mydomain: contains sed test Myread Oldconfig \
! 	Guess Loc awk sort uniq +usrinc rm hostcat Tr
  ?MAKE:	-pick add $@ %<
  ?S:myhostname (hostname):
  ?S:	This variable contains the eventual value of the MYHOSTNAME symbol,
--- 20,26 ----
  ?RCS: Baseline for dist 3.0 netwide release.
  ?RCS:
  ?MAKE:myhostname phostname mydomain: contains sed test Myread Oldconfig \
! 	Guess Loc awk echo sort uniq +usrinc rm hostcat Tr
  ?MAKE:	-pick add $@ %<
  ?S:myhostname (hostname):
  ?S:	This variable contains the eventual value of the MYHOSTNAME symbol,
***************
*** 57,63 ****
  ?H:#define MYHOSTNAME "$myhostname"		/**/
  ?H:#define MYDOMAIN "$mydomain"		/**/
  ?H:.
! ?T:cont i tans
  : now get the host name
  echo " "
  echo "Figuring out host name..." >&4
--- 57,63 ----
  ?H:#define MYHOSTNAME "$myhostname"		/**/
  ?H:#define MYDOMAIN "$mydomain"		/**/
  ?H:.
! ?T:cont i tans tmp_re
  : now get the host name
  echo " "
  echo "Figuring out host name..." >&4
***************
*** 160,175 ****
  ?X: unit. However, we want to stick the sanity checks right after the domain
  ?X: name computation, or if none is done, right after the hostname computation.
  ?X:
! 		$hostcat >hosts
! 		dflt=.`$awk "/[0-9].*$myhostname/ {for(i=2; i<=NF;i++) print \\\$i}" \
  			hosts | $sort | $uniq | \
! 			$sed -n -e "s/$myhostname\.\([a-zA-Z_.]\)/\1/p"`
! 		case "$dflt" in
  		.) echo "(You do not have fully-qualified names in /etc/hosts)"
  			tans=`./loc resolv.conf X /etc /usr/etc`
  			if $test -f "$tans"; then
  				echo "(Attempting domain name extraction from $tans)"
! 				dflt=.`egrep '^domain' $tans | $sed 's/domain[ 	]*\(.*\)/\1/' \
  					| ./tr '[A-Z]' '[a-z]' 2>/dev/null`
  			fi
  			;;
--- 160,198 ----
  ?X: unit. However, we want to stick the sanity checks right after the domain
  ?X: name computation, or if none is done, right after the hostname computation.
  ?X:
! 		{
! 			: If we use NIS, try ypmatch.
! 			: Is there some reason why this was not done before?
! 			test "X$hostcat" = "Xypcat hosts" &&
! 			ypmatch "$myhostname" hosts 2>/dev/null |\
! 				$sed -e 's/[	 ]*#.*//; s/$/ /' > hosts && \
! 			$test -s hosts
! 		} || {
! 			: Extract only the relevant hosts, reducing file size,
! 			: remove comments, insert trailing space for later use.
! 		     	$hostcat | $sed -n -e "s/[	 ]*#.*//; s/\$/ /
! 					/[	 ]$myhostname[	. ]/p" > hosts
! 		}
! 		tmp_re="[	. ]"
! 		$test x`$awk "/[0-9].*[	 ]$myhostname$tmp_re/ { sum++ }
! 			     END { print sum }" hosts` = x1 || tmp_re="[	 ]"
! 		dflt=.`$awk "/[0-9].*[	 ]$myhostname$tmp_re/ {for(i=2; i<=NF;i++) print \\\$i}" \
  			hosts | $sort | $uniq | \
! 			$sed -n -e "s/$myhostname\.\([-a-zA-Z0-9_.]\)/\1/p"`
! 		case `$echo X$dflt` in
! 		X*\ *)	echo "(Several hosts in /etc/hosts matched hostname)"
! 			dflt=.
! 			;;
  		.) echo "(You do not have fully-qualified names in /etc/hosts)"
+ 			;;
+ 		esac
+ 		case "$dflt" in
+ 		.)
  			tans=`./loc resolv.conf X /etc /usr/etc`
  			if $test -f "$tans"; then
  				echo "(Attempting domain name extraction from $tans)"
! 				: Why was there an Egrep here, when Sed works?
! 				dflt=.`$sed -n -e 's/^domain[ 	]*\(.*\)/\1/p' $tans \
  					| ./tr '[A-Z]' '[a-z]' 2>/dev/null`
  			fi
  			;;
Index: nblock_io.U
Prereq:  3.0.1.1 
*** mcon/U//nblock_io.U	Tue Jul 25 15:03:43 1995
--- /home2/doughera/lib/dist/U//nblock_io.U	Sun Nov 26 14:58:56 1995
***************
*** 12,17 ****
--- 12,21 ----
  ?RCS: Revision 3.0.1.1  1995/07/25  14:13:22  ram
  ?RCS: patch56: created
  ?RCS:
+ ?X: 
+ ?X: Simplify here document for shells that can't handle them well.
+ ?X: (Problem reported on FreeBSD; it's unclear if this helps.)  --AD
+ ?X:
  ?MAKE:o_nonblock eagain rd_nodata d_eofnblk: cat rm +cc +ccflags +ldflags \
  	d_open3 h_sysfile h_fcntl signal_t hint Oldconfig Setvar
  ?MAKE:	-pick add $@ %<
***************
*** 123,130 ****
--- 127,137 ----
  #include <errno.h>
  #include <sys/types.h>
  #include <signal.h>
+ #define MY_O_NONBLOCK $o_nonblock
  extern int errno;
  $signal_t blech(x) int x; { exit(3); }
+ EOCP
+ 	$cat >> try.c <<'EOCP'
  main()
  {
  	int pd[2];
***************
*** 138,144 ****
  		int ret;
  		close(pd[1]);	/* Parent reads from pd[0] */
  		close(pu[0]);	/* Parent writes (blocking) to pu[1] */
! 		if (-1 == fcntl(pd[0], F_SETFL, $o_nonblock))
  			exit(1);
  		signal(SIGALRM, blech);
  		alarm(5);
--- 145,151 ----
  		int ret;
  		close(pd[1]);	/* Parent reads from pd[0] */
  		close(pu[0]);	/* Parent writes (blocking) to pu[1] */
! 		if (-1 == fcntl(pd[0], F_SETFL, MY_O_NONBLOCK))
  			exit(1);
  		signal(SIGALRM, blech);
  		alarm(5);
***************
*** 175,181 ****
  	exit(0);				/* Bye bye, thank you for playing! */
  }
  EOCP
! 	if $cc $ccflags $ldflags try.c -o try >/dev/null; 2>&1; then
  ?X: Use script to avoid the possible 'alarm call' message
  		echo "./try >try.out 2>try.ret 3>try.err || exit 4" >mtry
  		chmod +x mtry
--- 182,188 ----
  	exit(0);				/* Bye bye, thank you for playing! */
  }
  EOCP
! 	if $cc $ccflags $ldflags try.c -o try >/dev/null 2>&1; then
  ?X: Use script to avoid the possible 'alarm call' message
  		echo "./try >try.out 2>try.ret 3>try.err || exit 4" >mtry
  		chmod +x mtry


End of patch.
