unless(defined(&SQUARE)) {
    sub SQUARE {
	local($x) = @_;
	eval q((($x)*($x)));
    }
}
unless(defined(&ERROR)) {
    eval 'sub ERROR {
        local($x) = @_;
	    eval q( &fprintf( &stderr, \\"%s\\\\n\\", $x->[2][3][0]));
    }' unless defined(&ERROR);
}
unless(defined(&_H2PH_H_)) {
    eval 'sub _H2PH_H_ () {1;}' unless defined(&_H2PH_H_);
    # "$Revision h2ph.h,v 1.0 98/05/04 20:42:14 billy $"
    undef(&MAX) if defined(&MAX);
    eval 'sub MAX {
        local($a,$b) = @_;
	    eval q((($a) > ($b) ? ($a) : ($b)));
    }' unless defined(&MAX);
    if(defined(&__SOME_UNIMPORTANT_PROPERTY)) {
	eval 'sub MIN {
	    local($a,$b) = @_;
    	    eval q((($a) < ($b) ? ($a) : ($b)));
	}' unless defined(&MIN);
    }
    if(!(defined (defined(&__SOMETHING_MORE_IMPORTANT) ? &__SOMETHING_MORE_IMPORTANT : 0))) {
    }
 elsif(!(defined (defined(&__SOMETHING_REALLY_REALLY_IMPORTANT) ? &__SOMETHING_REALLY_REALLY_IMPORTANT : 0))) {
	die("Nup, can't go on ");
    } else {
	eval 'sub EVERYTHING_IS_OK () {1;}' unless defined(&EVERYTHING_IS_OK);
    }
    undef(&WHATEVER) if defined(&WHATEVER);
    if((!((defined (defined(&__SOMETHING_TRIVIAL) ? &__SOMETHING_TRIVIAL : 0)  && defined (defined(&__SOMETHING_LESS_SO) ? &__SOMETHING_LESS_SO : 0))) || defined (defined(&__SOMETHING_OVERPOWERING) ? &__SOMETHING_OVERPOWERING : 0))) {
	eval 'sub WHATEVER () {6;}' unless defined(&WHATEVER);
    }
 elsif(!(defined (defined(&__SOMETHING_TRIVIAL) ? &__SOMETHING_TRIVIAL : 0)) ) {
	eval 'sub WHATEVER () {7;}' unless defined(&WHATEVER);
    }
 elsif(!(defined (defined(&__SOMETHING_LESS_SO) ? &__SOMETHING_LESS_SO : 0)) ) {
	eval 'sub WHATEVER () {8;}' unless defined(&WHATEVER);
    } else {
	eval 'sub WHATEVER () {1000;}' unless defined(&WHATEVER);
    }
    require 'sys/socket.ph';
    require 'sys/ioctl.ph';
    my($i) = 0;
    if(exists($INC{sys/fcntl.ph})) {
	++$i while ($i <= $#INC and $INC[$i].'/sys/fcntl.ph' ne $INC{'sys/fcntl.ph'});
	$i = 0 if $INC[$i].'/sys/fcntl.ph' ne $INC{'sys/fcntl.ph'};
    }
    eval("require '" . ($i ? $INC[$i].'/' : '') . "$incl';");}
1;
